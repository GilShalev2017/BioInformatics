// <auto-generated />
using Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(BioDbContext))]
    [Migration("20250904201426_AddDrugGeneRelation")]
    partial class AddDrugGeneRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Disease", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiseaseID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiseaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("Backend.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DrugId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("Backend.Models.Gene", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GeneID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GeneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genes");
                });

            modelBuilder.Entity("DiseaseGene", b =>
                {
                    b.Property<int>("RelatedDiseasesId")
                        .HasColumnType("int");

                    b.Property<int>("RelatedGenesId")
                        .HasColumnType("int");

                    b.HasKey("RelatedDiseasesId", "RelatedGenesId");

                    b.HasIndex("RelatedGenesId");

                    b.ToTable("DiseaseGene");
                });

            modelBuilder.Entity("DrugGene", b =>
                {
                    b.Property<int>("TargetGenesId")
                        .HasColumnType("int");

                    b.Property<int>("TargetedByDrugsId")
                        .HasColumnType("int");

                    b.HasKey("TargetGenesId", "TargetedByDrugsId");

                    b.HasIndex("TargetedByDrugsId");

                    b.ToTable("DrugGene");
                });

            modelBuilder.Entity("DiseaseGene", b =>
                {
                    b.HasOne("Backend.Models.Disease", null)
                        .WithMany()
                        .HasForeignKey("RelatedDiseasesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Gene", null)
                        .WithMany()
                        .HasForeignKey("RelatedGenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DrugGene", b =>
                {
                    b.HasOne("Backend.Models.Gene", null)
                        .WithMany()
                        .HasForeignKey("TargetGenesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Drug", null)
                        .WithMany()
                        .HasForeignKey("TargetedByDrugsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
